C51 COMPILER V9.60.0.0   MAIN                                                              12/28/2024 12:28:33 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "AT24C02.h"      // AT24C02 EEPROM相关函数库
   2          #include "DS1302.h"       // DS1302 RTC相关函数库
   3          #include "DS18B20.h"      // DS18B20温度传感器相关函数库
   4          #include "Delay.h"        // 延时函数库
   5          #include "Key.h"          // 按键处理函数库
   6          //#include "LCD1602.h"     // LCD1602显示屏相关库（已注释）
   7          #include "Timer0.h"       // 定时器0相关函数库
   8          #include <REGX52.H>       // 51单片机寄存器定义
   9          //#include "public.h"      // 公共函数库（已注释）
  10          #include "lcd12864.h"     // LCD12864显示屏相关库
  11          
  12          // 定义蜂鸣器连接的引脚
  13          sbit BEEP = P2 ^ 5;
  14          
  15          // 温度变量
  16          unsigned char time;      // 时间变量
  17          float T, TShow;          // 温度值和显示温度
  18          char TLow, THigh;        // 温度阈值（低阈值和高阈值）
  19          int i, j;                // 循环计数器
  20          unsigned char KeyNum;    // 按键编号
  21          
  22          // 最大温度记录数
  23          #define MAX_TEMP_RECORDS 5
  24          
  25          // GPIO引脚定义
  26          #define GPIO_DIG P0
  27          #define GPIO_KEY P1
  28          
  29          // 按键值存储变量
  30          u8 KeyValue;            // 用来存放读取到的键值
  31          
  32          // 数码管显示0~F的值
  33          u8 code smgduan[17] = {
  34              0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xf8,
  35              0x80, 0x90, 0x88, 0x83, 0xc6, 0xa1, 0x86, 0x8e
  36          };
  37          
  38          // 初始化时，按键值默认为0xFF，表示无按键
  39          u8 KeyValue = 0xFF;
  40          
  41          // 新增温度存储相关变量
  42          float TempRecords[MAX_TEMP_RECORDS];  // 温度记录数组
  43          unsigned char TempCount = 0;          // 当前存储的温度数量
  44          
  45          /*******************************************************************************
  46          * 函 数 名         : KeyDown
  47          * 函数功能       : 检测有按键按下并读取键值
  48          * 输    入         : 无
  49          * 输    出         : 无
  50          *******************************************************************************/
  51          void KeyDown(void)
  52          {
  53   1        char a=0;
  54   1        GPIO_KEY=0x0f;
C51 COMPILER V9.60.0.0   MAIN                                                              12/28/2024 12:28:33 PAGE 2   

  55   1        if(GPIO_KEY!=0x0f)//读取按键是否按下
  56   1        {
  57   2          delay(1000);//延时10ms进行消抖
  58   2          if(GPIO_KEY!=0x0f)//再次检测键盘是否按下
  59   2          { 
  60   3            //测试列
  61   3            GPIO_KEY=0X0F;
  62   3            switch(GPIO_KEY)
  63   3            {
  64   4              case(0X07): KeyValue=0;break;
  65   4              case(0X0b): KeyValue=1;break;
  66   4              case(0X0d): KeyValue=2;break;
  67   4              case(0X0e): KeyValue=3;break;
  68   4            }
  69   3            //测试行
  70   3            GPIO_KEY=0XF0;
  71   3            switch(GPIO_KEY)
  72   3            {
  73   4              case(0X70): KeyValue=KeyValue;break;
  74   4              case(0Xb0): KeyValue=KeyValue+4;break;
  75   4              case(0Xd0): KeyValue=KeyValue+8;break;
  76   4              case(0Xe0): KeyValue=KeyValue+12;break;
  77   4            }
  78   3            
  79   3          }
  80   2        }
  81   1        while((a<50)&&(GPIO_KEY!=0xf0))  //检测按键松手检测
  82   1        {
  83   2          delay(100);
  84   2          a++;
  85   2        }
  86   1      }
  87          
  88          void Beep_Alert(unsigned int duration) // 蜂鸣器报警函数
  89          {
  90   1          unsigned int i;
  91   1          for (i = 0; i < duration; i++) {
  92   2              BEEP = !BEEP;   // 翻转蜂鸣器引脚
  93   2              delay_10us(10); // 延时控制频率
  94   2          }
  95   1          BEEP = 0; // 关闭蜂鸣器
  96   1      }
  97          
  98          void main() {
  99   1          long F;
 100   1          unsigned int FInt;  // 整数部分
 101   1          unsigned int FFrac; // 小数部分
 102   1          int start_time;
 103   1          DS1302_Init();
 104   1          DS1302_SetTime(); // 设置时间
 105   1          start_time = 0;
 106   1          lcd12864_init(); // LCD12864初始化
 107   1      
 108   1          lcd12864_show_string(1, 0, "数\xfd显温度计");
 109   1          lcd12864_show_string(1, 1, "2021217934"); // 第4行字符串显示
 110   1          while (start_time < 3000)                 // 执行3秒
 111   1          {
 112   2              DS1302_ReadTime(); // 读取时间
 113   2              lcd12864_show_string(0, 2, "TIME:");
 114   2              LCD_ShowNum(4, 6, DS1302_Time[3], 2); // 显示时
 115   2              lcd12864_show_string(4, 2, ":");
 116   2              LCD_ShowNum(4, 9, DS1302_Time[4], 2); // 显示分
C51 COMPILER V9.60.0.0   MAIN                                                              12/28/2024 12:28:33 PAGE 3   

 117   2              lcd12864_show_string(6, 2, ":");
 118   2              LCD_ShowNum(4, 12, DS1302_Time[5], 2); // 显示秒
 119   2              delay_ms(100);                         // 每次延时100ms
 120   2              start_time += 100;                     // 增加计时器
 121   2          }
 122   1          lcd12864_init(); // LCD12864初始化
 123   1          delay_ms(1000);
 124   1          lcd12864_show_string(0, 2, "TH:");
 125   1          lcd12864_show_string(4, 2, "TL:");
 126   1          DS1302_deInit();
 127   1          
 128   1          DS18B20_ConvertT();          // 上电先转换一次温度，防止第一次读数据错误
 129   1          delay_ms(1000);               // 等待转换完成
 130   1          THigh = AT24C02_ReadByte(0); // 读取温度阈值数据
 131   1          TLow = AT24C02_ReadByte(1);
 132   1          if (THigh > 100 || TLow < -10 || THigh <= TLow) {
 133   2              THigh = 20; // 如果阈值非法，则设为默认值
 134   2              TLow = 15;
 135   2          }
 136   1      
 137   1          LCD_ShowSignedNum(2, 11, THigh, 2);
 138   1          LCD_ShowSignedNum(2, 15, TLow, 2);
 139   1          Timer0_Init();
 140   1          while (1) {
 141   2              KeyNum = Key();
 142   2              KeyDown();       //按键判断函数
 143   2              /* 温度读取及显示 */
 144   2              DS18B20_ConvertT();  // 转换温度
 145   2              T = DS18B20_ReadT(); // 读取温度
 146   2              if (T < 0)           // 如果温度小于0
 147   2              {
 148   3                  LCD_ShowChar(1, 1, '-'); // 显示负号
 149   3                  TShow = -T;              // 将温度变为正数
 150   3              } else                       // 如果温度大于等于0
 151   2              {
 152   3                  LCD_ShowChar(1, 1, '+'); // 显示正号
 153   3                  TShow = T;
 154   3              }
 155   2              LCD_ShowNum(1, 2, TShow, 2);                              // 显示温度整数部分
 156   2              LCD_ShowChar(1, 3, '.');                                  // 显示小数点
 157   2              LCD_ShowNum(1, 4, (unsigned long)(TShow * 100) % 100, 2); // 显示温度小数部分
 158   2      
 159   2              // 计算华氏温度
 160   2              F = (long)T * 18 / 10 + 32;
 161   2              FInt = (unsigned int)(F);        // 整数部分
 162   2              FFrac = (unsigned int)(F % 100); // 小数部分
 163   2      
 164   2              LCD_ShowNum(1, 6, FInt, 2);                                     // 显示华氏温度整数部分
 165   2              LCD_ShowChar(1, 7, '.');                                        // 显示小数点
 166   2              LCD_ShowNum(1, 8, (unsigned long)(T * 100) % 100 * 18 / 10, 2); // 显示华氏温度小数部分
 167   2              /* 阈值判断及显示 */
 168   2              if (KeyNum) {
 169   3                  if (KeyNum == 1) // K1按键，THigh自增
 170   3                  {
 171   4                      THigh++;
 172   4                      if (THigh > 100) {
 173   5                          THigh = 100;
 174   5                      }
 175   4                  }
 176   3                  if (KeyNum == 2) // K2按键，THigh自减
 177   3                  {
 178   4                      THigh--;
C51 COMPILER V9.60.0.0   MAIN                                                              12/28/2024 12:28:33 PAGE 4   

 179   4                      if (THigh <= TLow) {
 180   5                          THigh++;
 181   5                      }
 182   4                  }
 183   3                  if (KeyNum == 3) // K3按键，TLow自增
 184   3                  {
 185   4                      lcd12864_init(); // LCD12864初始化
 186   4                      TLow++;
 187   4                      if (TLow >= THigh) {
 188   5                          TLow--;
 189   5                      }
 190   4                  }
 191   3                  if (KeyNum == 4) // K4按键，TLow自减
 192   3                  {
 193   4                      TLow--;
 194   4                      if (TLow < -10) {
 195   5                          TLow = -10;
 196   5                      }
 197   4                  }
 198   3                  lcd12864_show_string(0, 2, "TH:");
 199   3                  lcd12864_show_string(4, 2, "TL:");
 200   3                  LCD_ShowSignedNum(2, 11, THigh, 2);
 201   3                  LCD_ShowSignedNum(2, 15, TLow, 2);
 202   3                  AT24C02_WriteByte(0, THigh); // 写入到At24C02中保存
 203   3                  delay_ms(5);
 204   3                  AT24C02_WriteByte(1, TLow);
 205   3                  delay_ms(5);
 206   3              }
 207   2              if(KeyValue){
 208   3                if(KeyValue==1){
 209   4                  if(TempCount < MAX_TEMP_RECORDS){
 210   5                    TempRecords[TempCount] = TShow;
 211   5                    TempCount++;
 212   5                    lcd12864_init();
 213   5                    lcd12864_show_string(0, 1, "Temperature");
 214   5                    lcd12864_show_string(0, 2, "Stored!");
 215   5                    delay_ms(2000);
 216   5                    lcd12864_init();
 217   5                    KeyValue = 0xFF;  // 清除按键值
 218   5                  }else{
 219   5                    lcd12864_init();
 220   5                    lcd12864_show_string(0, 1, "Full!");
 221   5                    delay_ms(1000);
 222   5                    TempCount = 0;
 223   5                    lcd12864_init();
 224   5                    KeyValue = 0xFF;  // 清除按键值
 225   5                  }
 226   4                }
 227   3                if(KeyValue==2){
 228   4                  lcd12864_init();
 229   4                  LCD_ShowNum(0, 0, TempRecords[0], 2);                                     // 显示华氏温度整数部分
 230   4                  LCD_ShowChar(0, 1, '.');                                        // 显示小数点
 231   4                  LCD_ShowNum(0, 2, (unsigned long)(TempRecords[0] * 100) % 100 * 18 / 10, 2); // 显示华氏温度小数部分
 232   4                  delay_ms(3000);
 233   4                  KeyValue = 0xFF;  // 清除按键值
 234   4                  lcd12864_init();
 235   4                  }
 236   3                if(KeyValue==3){
 237   4                  lcd12864_init();
 238   4                  LCD_ShowNum(0, 0, TempRecords[1], 2);                                     // 显示华氏温度整数部分
 239   4                  LCD_ShowChar(0, 1, '.');                                        // 显示小数点
 240   4                  LCD_ShowNum(0, 2, (unsigned long)(TempRecords[1] * 100) % 100 * 18 / 10, 2); // 显示华氏温度小数部分
C51 COMPILER V9.60.0.0   MAIN                                                              12/28/2024 12:28:33 PAGE 5   

 241   4                  delay_ms(3000);
 242   4                  KeyValue = 0xFF;  // 清除按键值
 243   4                  lcd12864_init();
 244   4                  }
 245   3                if(KeyValue==4){
 246   4                  lcd12864_init();
 247   4                  LCD_ShowNum(0, 0, TempRecords[2], 2);                                     // 显示华氏温度整数部分
 248   4                  LCD_ShowChar(0, 1, '.');                                        // 显示小数点
 249   4                  LCD_ShowNum(0, 2, (unsigned long)(TempRecords[2] * 100) % 100 * 18 / 10, 2); // 显示华氏温度小数部分
 250   4                  delay_ms(3000);
 251   4                  KeyValue = 0xFF;  // 清除按键值
 252   4                  lcd12864_init();
 253   4                  }
 254   3                if(KeyValue==5){
 255   4                  lcd12864_init();
 256   4                  LCD_ShowNum(0, 0, TempRecords[3], 2);                                     // 显示华氏温度整数部分
 257   4                  LCD_ShowChar(0, 1, '.');                                        // 显示小数点
 258   4                  LCD_ShowNum(0, 2, (unsigned long)(TempRecords[3] * 100) % 100 * 18 / 10, 2); // 显示华氏温度小数部分
 259   4                  delay_ms(3000);
 260   4                  KeyValue = 0xFF;  // 清除按键值
 261   4                  lcd12864_init();
 262   4                  }
 263   3                if(KeyValue==6){
 264   4                  lcd12864_init();
 265   4                  LCD_ShowNum(0, 0, TempRecords[4], 2);                                     // 显示华氏温度整数部分
 266   4                  LCD_ShowChar(0, 1, '.');                                        // 显示小数点
 267   4                  LCD_ShowNum(0, 2, (unsigned long)(TempRecords[4] * 100) % 100 * 18 / 10, 2); // 显示华氏温度小数部分
 268   4                  delay_ms(3000);
 269   4                  KeyValue = 0xFF;  // 清除按键值
 270   4                  lcd12864_init();
 271   4                  }
 272   3              }
 273   2              lcd12864_show_string(0, 2, "TH:");
 274   2              lcd12864_show_string(4, 2, "TL:");
 275   2              LCD_ShowSignedNum(2, 11, THigh, 2);
 276   2              LCD_ShowSignedNum(2, 15, TLow, 2);
 277   2              if (T > THigh) // 温度越高
 278   2              {
 279   3                  // LCD_ShowString(1, 13, "OV:H");
 280   3                  Beep_Alert(1000); // 蜂鸣器报警
 281   3              } else if (T < TLow)  // 温度越低
 282   2              {
 283   3                  // LCD_ShowString(1, 13, "OV:L");
 284   3                  Beep_Alert(1000); // 蜂鸣器报警
 285   3              } else {
 286   3                  // LCD_ShowString(1, 13, "    "); // 清除报警显示
 287   3                  BEEP = 0; // 关闭蜂鸣器
 288   3              }
 289   2          }
 290   1      }
 291          
 292          void Timer0_Routine() interrupt 1 {
 293   1          static unsigned int T0Count;
 294   1          TL0 = 0x18; // 设置定时初值
 295   1          TH0 = 0xFC; // 设置定时初值
 296   1          T0Count++;
 297   1          if (T0Count >= 20) {
 298   2              T0Count = 0;
 299   2              Key_Loop(); // 每20ms调用一次按键驱动函数
 300   2          }
 301   1      }

C51 COMPILER V9.60.0.0   MAIN                                                              12/28/2024 12:28:33 PAGE 6   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1988    ----
   CONSTANT SIZE    =     81    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

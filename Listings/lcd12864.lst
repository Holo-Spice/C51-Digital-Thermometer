C51 COMPILER V9.60.0.0   LCD12864                                                          12/28/2024 11:59:13 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN .\Objects\lcd12864.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE lcd12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lc
                    -d12864.lst) TABS(2) OBJECT(.\Objects\lcd12864.obj)

line level    source

   1          #include "lcd12864.h"
   2          #include "Delay.h"
   3          
   4          //管脚定义
   5          #define LCD12864_DATAPORT P0  //LCD12864数据端口定义
   6          sbit LCD12864_RS=P2^6;//数据命令选择
   7          sbit LCD12864_WR=P2^5;//读写选择
   8          sbit LCD12864_E=P2^7;//使能信号
   9          
  10          sbit LCD12864_PSB=P3^2;//8位或4并口/串口选择
  11          
  12          /*******************************************************************************
  13          * 函 数 名       : lcd12864_write_cmd
  14          * 函数功能     : LCD12864写命令
  15          * 输    入       : cmd：指令
  16          * 输    出       : 无
  17          *******************************************************************************/
  18          void lcd12864_write_cmd(u8 cmd)
  19          {
  20   1        LCD12864_RS=0;//选择命令
  21   1        LCD12864_WR=0;//选择写
  22   1        LCD12864_E=0;
  23   1        LCD12864_DATAPORT=cmd;//准备命令
  24   1        delay_ms2(1);
  25   1        LCD12864_E=1;//使能脚E先上升沿写入
  26   1        delay_ms2(1);
  27   1        LCD12864_E=0;//使能脚E后负跳变完成写入
  28   1      }
  29          
  30          /*******************************************************************************
  31          * 函 数 名       : lcd12864_write_data
  32          * 函数功能     : LCD12864写数据
  33          * 输    入       : dat：数据
  34          * 输    出       : 无
  35          *******************************************************************************/
  36          void lcd12864_write_data(u8 dat)
  37          {
  38   1        LCD12864_RS=1;//选择数据
  39   1        LCD12864_WR=0;//选择写
  40   1        LCD12864_E=0;
  41   1        LCD12864_DATAPORT=dat;//准备数据
  42   1        delay_ms2(1);
  43   1        LCD12864_E=1;//使能脚E先上升沿写入
  44   1        delay_ms2(1);
  45   1        LCD12864_E=0;//使能脚E后负跳变完成写入
  46   1      }
  47          
  48          /*******************************************************************************
  49          * 函 数 名       : lcd12864_init
  50          * 函数功能     : LCD12864初始化
  51          * 输    入       : 无
  52          * 输    出       : 无
  53          *******************************************************************************/
  54          void lcd12864_init(void)
C51 COMPILER V9.60.0.0   LCD12864                                                          12/28/2024 11:59:13 PAGE 2   

  55          {
  56   1        LCD12864_PSB=1;//选择8位或4位并口方式
  57   1        lcd12864_write_cmd(0x30);//数据总线8位，基本指令操作
  58   1        lcd12864_write_cmd(0x0c);//整体显示关，游标显示关，游标正常显示
  59   1        lcd12864_write_cmd(0x06);//写入新数据后光标右移，显示屏不移动
  60   1        lcd12864_write_cmd(0x01);//清屏 
  61   1      }
  62          
  63          /*******************************************************************************
  64          * 函 数 名       : lcd12864_clear
  65          * 函数功能     : LCD12864清屏
  66          * 输    入       : 无
  67          * 输    出       : 无
  68          *******************************************************************************/
  69          void lcd12864_clear(void)
  70          {
  71   1        lcd12864_write_cmd(0x01); 
  72   1      } 
  73          
  74          /*******************************************************************************
  75          * 函 数 名       : lcd12864_show_string
  76          * 函数功能     : LCD12864显示字符串
  77          * 输    入       : x,y：显示坐标，x=0~7，y=0~3;
  78                     str：显示字符串数据
  79          * 输    出       : 无
  80          *******************************************************************************/
  81          void lcd12864_show_string(u8 x,u8 y,u8 *str)
  82          {
  83   1        if(y<=0)y=0;
  84   1        if(y>3)y=3;
  85   1        x&=0x0f;  //限制x,y不能大于显示范围
  86   1      
  87   1        switch(y)
  88   1        {
  89   2          case 0: x|=0x80;break;//第1行地址+x的偏移
  90   2          case 1: x|=0x90;break;//第2行地址+x的偏移
  91   2          case 2: x|=0x88;break;//第3行地址+x的偏移
  92   2          case 3: x|=0x98;break;//第4行地址+x的偏移
  93   2        }
  94   1        lcd12864_write_cmd(x);
  95   1        while(*str!='\0')
  96   1        {
  97   2          lcd12864_write_data(*str);
  98   2          str++;    
  99   2        }
 100   1          
 101   1      } 
 102          int LCD_Pow(int X,int Y)
 103          {
 104   1        unsigned char i;
 105   1        int Result=1;
 106   1        for(i=0;i<Y;i++)
 107   1        {
 108   2          Result*=X;
 109   2        }
 110   1        return Result;
 111   1      }
 112          void LCD_SetCursor(unsigned char Line,unsigned char Column)
 113          {
 114   1        if(Line==1)
 115   1        {
 116   2          lcd12864_write_cmd(0x80|(Column-1));
C51 COMPILER V9.60.0.0   LCD12864                                                          12/28/2024 11:59:13 PAGE 3   

 117   2        }
 118   1        else if(Line==2)
 119   1        {
 120   2          lcd12864_write_cmd(0x80|(Column-1+0x40));
 121   2        }
 122   1      }
 123          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 124          {
 125   1        unsigned char i;
 126   1        LCD_SetCursor(Line,Column);
 127   1        for(i=Length;i>0;i--)
 128   1        {
 129   2          lcd12864_write_data(Number/LCD_Pow(10,i-1)%10+'0');
 130   2        }
 131   1      }
 132          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 133          {
 134   1        unsigned char i;
 135   1        unsigned int Number1;
 136   1        LCD_SetCursor(Line,Column);
 137   1        if(Number>=0)
 138   1        {
 139   2          lcd12864_write_data('+');
 140   2          Number1=Number;
 141   2        }
 142   1        else
 143   1        {
 144   2          lcd12864_write_data('-');
 145   2          Number1=-Number;
 146   2        }
 147   1        for(i=Length;i>0;i--)
 148   1        {
 149   2          lcd12864_write_data(Number1/LCD_Pow(10,i-1)%10+'0');
 150   2        }
 151   1      }
 152          void LCD_ShowChar(unsigned char Line,unsigned char Column,char Char)
 153          {
 154   1        LCD_SetCursor(Line,Column);
 155   1        lcd12864_write_data(Char);
 156   1      }
 157          void LCD_ShowString(unsigned char Line,unsigned char Column,char *String)
 158          {
 159   1        unsigned char i;
 160   1        LCD_SetCursor(Line,Column);
 161   1        for(i=0;String[i]!='\0';i++)
 162   1        {
 163   2          lcd12864_write_data(String[i]);
 164   2        }
 165   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    442    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

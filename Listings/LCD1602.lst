C51 COMPILER V9.60.0.0   LCD1602                                                           12/27/2024 13:24:39 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\LCD
                    -1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          
   2          
   3          #include "LCD1602.h"
   4          //引脚配置：
   5          sbit LCD_RS=P2^6; //
   6          sbit LCD_RW=P2^5; //LCD12864_WR
   7          sbit LCD_EN=P2^7; //LCD12864_E
   8          #define LCD_DataPort P0
   9          
  10          //函数定义：
  11          /**
  12            * @brief  LCD1602延时函数，12MHz调用可延时1ms
  13            * @param  无
  14            * @retval 无
  15            */
  16          void LCD_Delay()
  17          {
  18   1        unsigned char i, j;
  19   1      
  20   1        i = 2;
  21   1        j = 239;
  22   1        do
  23   1        {
  24   2          while (--j);
  25   2        } while (--i);
  26   1      }
  27          
  28          /**
  29            * @brief  LCD1602写命令
  30            * @param  Command 要写入的命令
  31            * @retval 无
  32            */
  33          void LCD_WriteCommand(unsigned char Command)
  34          {
  35   1        LCD_RS=0;
  36   1        LCD_RW=0;
  37   1        
  38   1        LCD_DataPort=Command;
  39   1        LCD_EN=1;
  40   1        LCD_Delay();
  41   1        LCD_EN=0;
  42   1        LCD_Delay();
  43   1      }
  44          
  45          /**
  46            * @brief  LCD1602写数据
  47            * @param  Data 要写入的数据
  48            * @retval 无
  49            */
  50          void LCD_WriteData(unsigned char Data)
  51          {
  52   1        LCD_RS=1;
  53   1        LCD_RW=0;
  54   1        LCD_DataPort=Data;
C51 COMPILER V9.60.0.0   LCD1602                                                           12/27/2024 13:24:39 PAGE 2   

  55   1        LCD_EN=1;
  56   1        LCD_Delay();
  57   1        LCD_EN=0;
  58   1        LCD_Delay();
  59   1      }
  60          
  61          /**
  62            * @brief  LCD1602设置光标位置
  63            * @param  Line 行位置，范围：1~2
  64            * @param  Column 列位置，范围：1~16
  65            * @retval 无
  66            */
  67          void LCD_SetCursor(unsigned char Line,unsigned char Column)
  68          {
  69   1        if(Line==1)
  70   1        {
  71   2          LCD_WriteCommand(0x80|(Column-1));
  72   2        }
  73   1        else if(Line==2)
  74   1        {
  75   2          LCD_WriteCommand(0x80|(Column-1+0x40));
  76   2        }
  77   1      }
  78          
  79          /**
  80            * @brief  LCD1602初始化函数
  81            * @param  无
  82            * @retval 无
  83            */
  84          void LCD_Init()
  85          {
  86   1        LCD12864_PSB=1;//Ñ¡Ôñ8Î»»ò4Î»²¢¿Ú·½Ê
  87   1        LCD_WriteCommand(0x30);//八位数据接口，两行显示，5*7点阵
  88   1        LCD_WriteCommand(0x0c);//显示开，光标关，闪烁关
  89   1        LCD_WriteCommand(0x06);//数据读写操作后，光标自动加一，画面不动
  90   1        LCD_WriteCommand(0x01);//光标复位，清屏
  91   1      }
  92          
  93          /**
  94            * @brief  在LCD1602指定位置上显示一个字符
  95            * @param  Line 行位置，范围：1~2
  96            * @param  Column 列位置，范围：1~16
  97            * @param  Char 要显示的字符
  98            * @retval 无
  99            */
 100          void LCD_ShowChar(unsigned char Line,unsigned char Column,char Char)
 101          {
 102   1        LCD_SetCursor(Line,Column);
 103   1        LCD_WriteData(Char);
 104   1      }
 105          
 106          /**
 107            * @brief  在LCD1602指定位置开始显示所给字符串
 108            * @param  Line 起始行位置，范围：1~2
 109            * @param  Column 起始列位置，范围：1~16
 110            * @param  String 要显示的字符串
 111            * @retval 无
 112            */
 113          void LCD_ShowString(unsigned char Line,unsigned char Column,char *String)
 114          {
 115   1        unsigned char i;
 116   1        LCD_SetCursor(Line,Column);
C51 COMPILER V9.60.0.0   LCD1602                                                           12/27/2024 13:24:39 PAGE 3   

 117   1        for(i=0;String[i]!='\0';i++)
 118   1        {
 119   2          LCD_WriteData(String[i]);
 120   2        }
 121   1      }
 122          
 123          /**
 124            * @brief  返回值=X的Y次方
 125            */
 126          int LCD_Pow(int X,int Y)
 127          {
 128   1        unsigned char i;
 129   1        int Result=1;
 130   1        for(i=0;i<Y;i++)
 131   1        {
 132   2          Result*=X;
 133   2        }
 134   1        return Result;
 135   1      }
 136          
 137          /**
 138            * @brief  在LCD1602指定位置开始显示所给数字
 139            * @param  Line 起始行位置，范围：1~2
 140            * @param  Column 起始列位置，范围：1~16
 141            * @param  Number 要显示的数字，范围：0~65535
 142            * @param  Length 要显示数字的长度，范围：1~5
 143            * @retval 无
 144            */
 145          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 146          {
 147   1        unsigned char i;
 148   1        LCD_SetCursor(Line,Column);
 149   1        for(i=Length;i>0;i--)
 150   1        {
 151   2          LCD_WriteData(Number/LCD_Pow(10,i-1)%10+'0');
 152   2        }
 153   1      }
 154          
 155          /**
 156            * @brief  在LCD1602指定位置开始以有符号十进制显示所给数字
 157            * @param  Line 起始行位置，范围：1~2
 158            * @param  Column 起始列位置，范围：1~16
 159            * @param  Number 要显示的数字，范围：-32768~32767
 160            * @param  Length 要显示数字的长度，范围：1~5
 161            * @retval 无
 162            */
 163          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 164          {
 165   1        unsigned char i;
 166   1        unsigned int Number1;
 167   1        LCD_SetCursor(Line,Column);
 168   1        if(Number>=0)
 169   1        {
 170   2          LCD_WriteData('+');
 171   2          Number1=Number;
 172   2        }
 173   1        else
 174   1        {
 175   2          LCD_WriteData('-');
 176   2          Number1=-Number;
 177   2        }
 178   1        for(i=Length;i>0;i--)
C51 COMPILER V9.60.0.0   LCD1602                                                           12/27/2024 13:24:39 PAGE 4   

 179   1        {
 180   2          LCD_WriteData(Number1/LCD_Pow(10,i-1)%10+'0');
 181   2        }
 182   1      }
 183          
 184          /**
 185            * @brief  在LCD1602指定位置开始以十六进制显示所给数字
 186            * @param  Line 起始行位置，范围：1~2
 187            * @param  Column 起始列位置，范围：1~16
 188            * @param  Number 要显示的数字，范围：0~0xFFFF
 189            * @param  Length 要显示数字的长度，范围：1~4
 190            * @retval 无
 191            */
 192          void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 193          {
 194   1        unsigned char i,SingleNumber;
 195   1        LCD_SetCursor(Line,Column);
 196   1        for(i=Length;i>0;i--)
 197   1        {
 198   2          SingleNumber=Number/LCD_Pow(16,i-1)%16;
 199   2          if(SingleNumber<10)
 200   2          {
 201   3            LCD_WriteData(SingleNumber+'0');
 202   3          }
 203   2          else
 204   2          {
 205   3            LCD_WriteData(SingleNumber-10+'A');
 206   3          }
 207   2        }
 208   1      }
 209          
 210          /**
 211            * @brief  在LCD1602指定位置开始以二进制显示所给数字
 212            * @param  Line 起始行位置，范围：1~2
 213            * @param  Column 起始列位置，范围：1~16
 214            * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111
 215            * @param  Length 要显示数字的长度，范围：1~16
 216            * @retval 无
 217            */
 218          void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 219          {
 220   1        unsigned char i;
 221   1        LCD_SetCursor(Line,Column);
 222   1        for(i=Length;i>0;i--)
 223   1        {
 224   2          LCD_WriteData(Number/LCD_Pow(2,i-1)%2+'0');
 225   2        }
 226   1      }
 227          
 228          void LCD_Clear() {
 229   1          unsigned char i, j;
 230   1          for (i = 1; i <= 15; i++) {
 231   2              for (j = 1; j <= 45; j++) {
 232   3                  LCD_ShowChar(i, j, ' '); // 用空格填充屏幕
 233   3              }
 234   2          }
 235   1      }
 236          void LCD_Clear2() {
 237   1          unsigned char i, j;
 238   1          for (i = 1; i <= 15; i++) {
 239   2              for (j = 1; j <= 2; j++) {
 240   3                  LCD_ShowChar(i, j, ' '); // 用空格填充屏幕
C51 COMPILER V9.60.0.0   LCD1602                                                           12/27/2024 13:24:39 PAGE 5   

 241   3              }
 242   2          }
 243   1      }
 244          
 245          
 246          void lcd12864_write_cmd(u8 cmd)
 247          {
 248   1        LCD12864_RS=0;//Ñ¡ÔñÃüÁî
 249   1        LCD12864_WR=0;//Ñ¡ÔñÐ´
 250   1        LCD12864_E=0;
 251   1        LCD12864_DATAPORT=cmd;//×¼±¸ÃüÁî
 252   1        delay_ms(1);
 253   1        LCD12864_E=1;//Ê¹ÄÜ½ÅEÏÈÉÏÉýÑØÐ´Èë
 254   1        delay_ms(1);
 255   1        LCD12864_E=0;//Ê¹ÄÜ½ÅEºó¸ºÌø±äÍê³ÉÐ´Èë
 256   1      }
 257          
 258          /*******************************************************************************
 259          * º¯ Êý Ãû       : lcd12864_write_data
 260          * º¯Êý¹¦ÄÜ     : LCD12864Ð´Êý¾Ý
 261          * Êä    Èë       : dat£ºÊý¾Ý
 262          * Êä    ³ö       : ÎÞ
 263          *******************************************************************************/
 264          void lcd12864_write_data(u8 dat)
 265          {
 266   1        LCD12864_RS=1;//Ñ¡ÔñÊý¾Ý
 267   1        LCD12864_WR=0;//Ñ¡ÔñÐ´
 268   1        LCD12864_E=0;
 269   1        LCD12864_DATAPORT=dat;//×¼±¸Êý¾Ý
 270   1        delay_ms(1);
 271   1        LCD12864_E=1;//Ê¹ÄÜ½ÅEÏÈÉÏÉýÑØÐ´Èë
 272   1        delay_ms(1);
 273   1        LCD12864_E=0;//Ê¹ÄÜ½ÅEºó¸ºÌø±äÍê³ÉÐ´Èë
 274   1      }
 275          
 276          /*******************************************************************************
 277          * º¯ Êý Ãû       : lcd12864_init
 278          * º¯Êý¹¦ÄÜ     : LCD12864³õÊ¼»¯
 279          * Êä    Èë       : ÎÞ
 280          * Êä    ³ö       : ÎÞ
 281          *******************************************************************************/
 282          void lcd12864_init(void)
 283          {
 284   1        LCD12864_PSB=1;//Ñ¡Ôñ8Î»»ò4Î»²¢¿Ú·½Ê½
 285   1        lcd12864_write_cmd(0x30);//Êý¾Ý×ÜÏß8Î»£¬»ù±¾Ö¸Áî²Ù×÷
 286   1        lcd12864_write_cmd(0x0c);//ÕûÌåÏÔÊ¾¹Ø£¬ÓÎ±êÏÔÊ¾¹Ø£¬ÓÎ±êÕý³£ÏÔÊ¾
 287   1        lcd12864_write_cmd(0x06);//Ð´ÈëÐÂÊý¾Ýºó¹â±êÓÒÒÆ£¬ÏÔÊ¾ÆÁ²»ÒÆ¶¯
 288   1        lcd12864_write_cmd(0x01);//ÇåÆÁ 
 289   1      }
 290          
 291          /*******************************************************************************
 292          * º¯ Êý Ãû       : lcd12864_clear
 293          * º¯Êý¹¦ÄÜ     : LCD12864ÇåÆÁ
 294          * Êä    Èë       : ÎÞ
 295          * Êä    ³ö       : ÎÞ
 296          *******************************************************************************/
 297          void lcd12864_clear(void)
 298          {
 299   1        lcd12864_write_cmd(0x01); 
 300   1      } 
 301          
 302          /*******************************************************************************
C51 COMPILER V9.60.0.0   LCD1602                                                           12/27/2024 13:24:39 PAGE 6   

 303          * º¯ Êý Ãû       : lcd12864_show_string
 304          * º¯Êý¹¦ÄÜ     : LCD12864ÏÔÊ¾×Ö·û´®
 305          * Êä    Èë       : x,y£ºÏÔÊ¾×ø±ê£¬x=0~7£¬y=0~3;
 306                     str£ºÏÔÊ¾×Ö·û´®Êý¾Ý
 307          * Êä    ³ö       : ÎÞ
 308          *******************************************************************************/
 309          void lcd12864_show_string(u8 x,u8 y,u8 *str)
 310          {
 311   1        if(y<=0)y=0;
 312   1        if(y>3)y=3;
 313   1        x&=0x0f;  //ÏÞÖÆx,y²»ÄÜ´óÓÚÏÔÊ¾·¶Î§
 314   1      
 315   1        switch(y)
 316   1        {
 317   2          case 0: x|=0x80;break;//µÚ1ÐÐµØÖ·+xµÄÆ«ÒÆ
 318   2          case 1: x|=0x90;break;//µÚ2ÐÐµØÖ·+xµÄÆ«ÒÆ
 319   2          case 2: x|=0x88;break;//µÚ3ÐÐµØÖ·+xµÄÆ«ÒÆ
 320   2          case 3: x|=0x98;break;//µÚ4ÐÐµØÖ·+xµÄÆ«ÒÆ
 321   2        }
 322   1        lcd12864_write_cmd(x);
 323   1        while(*str!='\0')
 324   1        {
 325   2          lcd12864_write_data(*str);
 326   2          str++;    
 327   2        }
 328   1          
 329   1      } 
 330          
 331          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    711    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      34
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
